# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "pymmcore-plus"
description = "pymmcore superset providing improved APIs, event connection, and a pure python acquisition engine"
keywords = ["microscope", "micro-manager", "multi-processing"]
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD 3-Clause License" }
authors = [
    { name = "Talley Lambert", email = "talley.lambert@gmail.com" },
    { name = "Federico Gasparoli", email = "federico.gasparoli@gmail.com" },
    { name = "Ian Hunt-Isaak", email = "ianhuntisaak@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Hardware",
    "Topic :: System :: Hardware :: Hardware Drivers",
    "Topic :: Utilities",
]
dynamic = ["version"]
dependencies = [
    "appdirs",
    "loguru",
    "numpy",
    "psygnal>=0.4.2",
    "pymmcore>=10.1.1.70.4",
    "rich",
    "typer",
    "typing-extensions",
    "useq-schema >=0.3.1",
    "wrapt",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
docs = [
    "mkdocs >=1.4",
    "mkdocs-material",
    "mkdocstrings ==0.22.0",
    "mkdocstrings-python ==1.1.2",
    # "griffe @ git+https://github.com/tlambert03/griffe@recursion"
]
testing = ["PyQt6", "pytest", "pytest-cov", "pytest-qt", "qtpy"]
dev = [
    "black",
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "rich",
    "ruff",
    "types-psutil",
]

[project.urls]
Source = "https://github.com/pymmcore-plus/pymmcore-plus"
Tracker = "https://github.com/pymmcore-plus/pymmcore-plus/issues"
Documentation = "https://pymmcore-plus.github.io/pymmcore-plus"

[project.scripts]
mmcore = "pymmcore_plus._cli:main"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.hooks.vcs]
version-file = "src/pymmcore_plus/_version.py"

# https://hatch.pypa.io/latest/config/build/#file-selection
# [tool.hatch.build.targets.sdist]
# include = ["/src", "/tests"]


# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
extend-select = [
    "E",  # style errors
    "F",  # flakes
    "D",  # pydocstyle
    "I",  # isort
    "UP", # pyupgrade
    # "N",  # pep8-naming
    # "S",  # bandit
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]
extend-ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
    "C901", # Function is too complex
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D"]
"examples/*.py" = ["D"]
"_cli.py" = ["B008"]
"_mmcore_plus*.py" = ["D4"]
"docs/*.py" = ["A", "D"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/*/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
plugins = "pydantic.mypy"

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "raise AssertionError",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
]
[tool.coverage.run]
source = ['src/pymmcore_plus']

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
    "tox.ini",
]
